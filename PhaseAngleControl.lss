
PhaseAngleControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000720  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000038  00000000  00000000  00000774  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000003f  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000228  00000000  00000000  000007eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000118  00000000  00000000  00000a13  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000234  00000000  00000000  00000b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000014d  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001d5  00000000  00000000  00000efd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  000010d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__vector_1>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 c4 00 	call	0x188	; 0x188 <main>
  78:	0c 94 8e 03 	jmp	0x71c	; 0x71c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z8ADC_readh>:
#include <avr/interrupt.h>

int ADC_read(unsigned char chnl)
{
	chnl= chnl & 0b00000111;
	ADMUX = 0x40;
  80:	80 e4       	ldi	r24, 0x40	; 64
  82:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA|=(1<<ADSC);
  86:	ea e7       	ldi	r30, 0x7A	; 122
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	80 64       	ori	r24, 0x40	; 64
  8e:	80 83       	st	Z, r24
	while(!(ADCSRA & (1<<ADIF)));
  90:	80 81       	ld	r24, Z
  92:	84 ff       	sbrs	r24, 4
  94:	fd cf       	rjmp	.-6      	; 0x90 <_Z8ADC_readh+0x10>
	ADCSRA|=(1<<ADIF);
  96:	ea e7       	ldi	r30, 0x7A	; 122
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	80 61       	ori	r24, 0x10	; 16
  9e:	80 83       	st	Z, r24
	return (ADC);
  a0:	20 91 78 00 	lds	r18, 0x0078
  a4:	30 91 79 00 	lds	r19, 0x0079
}
  a8:	82 2f       	mov	r24, r18
  aa:	93 2f       	mov	r25, r19
  ac:	08 95       	ret

000000ae <_Z3mapiffff>:

unsigned int map(int input, float input_start, float input_end, float output_start, float output_end)
  ae:	4f 92       	push	r4
  b0:	5f 92       	push	r5
  b2:	6f 92       	push	r6
  b4:	7f 92       	push	r7
  b6:	8f 92       	push	r8
  b8:	9f 92       	push	r9
  ba:	af 92       	push	r10
  bc:	bf 92       	push	r11
  be:	cf 92       	push	r12
  c0:	df 92       	push	r13
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	0f 93       	push	r16
  c8:	1f 93       	push	r17
  ca:	df 93       	push	r29
  cc:	cf 93       	push	r28
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	28 97       	sbiw	r28, 0x08	; 8
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	f8 94       	cli
  d8:	de bf       	out	0x3e, r29	; 62
  da:	0f be       	out	0x3f, r0	; 63
  dc:	cd bf       	out	0x3d, r28	; 61
  de:	2a 01       	movw	r4, r20
  e0:	3b 01       	movw	r6, r22
  e2:	09 83       	std	Y+1, r16	; 0x01
  e4:	1a 83       	std	Y+2, r17	; 0x02
  e6:	2b 83       	std	Y+3, r18	; 0x03
  e8:	3c 83       	std	Y+4, r19	; 0x04
  ea:	aa 27       	eor	r26, r26
  ec:	97 fd       	sbrc	r25, 7
  ee:	a0 95       	com	r26
  f0:	ba 2f       	mov	r27, r26
  f2:	bc 01       	movw	r22, r24
  f4:	cd 01       	movw	r24, r26
  f6:	0e 94 77 02 	call	0x4ee	; 0x4ee <__floatsisf>
  fa:	a3 01       	movw	r20, r6
  fc:	92 01       	movw	r18, r4
  fe:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__subsf3>
 102:	6d 83       	std	Y+5, r22	; 0x05
 104:	7e 83       	std	Y+6, r23	; 0x06
 106:	8f 83       	std	Y+7, r24	; 0x07
 108:	98 87       	std	Y+8, r25	; 0x08
 10a:	c5 01       	movw	r24, r10
 10c:	b4 01       	movw	r22, r8
 10e:	a7 01       	movw	r20, r14
 110:	96 01       	movw	r18, r12
 112:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__subsf3>
 116:	4b 01       	movw	r8, r22
 118:	5c 01       	movw	r10, r24
 11a:	69 81       	ldd	r22, Y+1	; 0x01
 11c:	7a 81       	ldd	r23, Y+2	; 0x02
 11e:	8b 81       	ldd	r24, Y+3	; 0x03
 120:	9c 81       	ldd	r25, Y+4	; 0x04
 122:	a3 01       	movw	r20, r6
 124:	92 01       	movw	r18, r4
 126:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__subsf3>
 12a:	9b 01       	movw	r18, r22
 12c:	ac 01       	movw	r20, r24
 12e:	c5 01       	movw	r24, r10
 130:	b4 01       	movw	r22, r8
 132:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__divsf3>
 136:	9b 01       	movw	r18, r22
 138:	ac 01       	movw	r20, r24
 13a:	6d 81       	ldd	r22, Y+5	; 0x05
 13c:	7e 81       	ldd	r23, Y+6	; 0x06
 13e:	8f 81       	ldd	r24, Y+7	; 0x07
 140:	98 85       	ldd	r25, Y+8	; 0x08
 142:	0e 94 2b 03 	call	0x656	; 0x656 <__mulsf3>
 146:	a7 01       	movw	r20, r14
 148:	96 01       	movw	r18, r12
 14a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__addsf3>
 14e:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 152:	9b 01       	movw	r18, r22
 154:	ac 01       	movw	r20, r24
{
	double slope = 1.0 * (output_end - output_start) / (input_end - input_start);
	unsigned int output = output_start + slope * (input - input_start);
	return output;
}
 156:	86 2f       	mov	r24, r22
 158:	93 2f       	mov	r25, r19
 15a:	28 96       	adiw	r28, 0x08	; 8
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
 166:	cf 91       	pop	r28
 168:	df 91       	pop	r29
 16a:	1f 91       	pop	r17
 16c:	0f 91       	pop	r16
 16e:	ff 90       	pop	r15
 170:	ef 90       	pop	r14
 172:	df 90       	pop	r13
 174:	cf 90       	pop	r12
 176:	bf 90       	pop	r11
 178:	af 90       	pop	r10
 17a:	9f 90       	pop	r9
 17c:	8f 90       	pop	r8
 17e:	7f 90       	pop	r7
 180:	6f 90       	pop	r6
 182:	5f 90       	pop	r5
 184:	4f 90       	pop	r4
 186:	08 95       	ret

00000188 <main>:

int main(void)
{
	DDRB = 0b00000001;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	84 b9       	out	0x04, r24	; 4
	ADMUX=(1<<REFS0);
 18c:	80 e4       	ldi	r24, 0x40	; 64
 18e:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 192:	87 e8       	ldi	r24, 0x87	; 135
 194:	80 93 7a 00 	sts	0x007A, r24
	
	EICRA |= (1 << ISC00);
 198:	e9 e6       	ldi	r30, 0x69	; 105
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	81 60       	ori	r24, 0x01	; 1
 1a0:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);
 1a2:	ed e3       	ldi	r30, 0x3D	; 61
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	81 60       	ori	r24, 0x01	; 1
 1aa:	80 83       	st	Z, r24
	
	sei();
 1ac:	78 94       	sei
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <main+0x26>

000001b0 <__vector_1>:
	{
		
	}
}

ISR (INT0_vect)
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	8f 92       	push	r8
 1bc:	9f 92       	push	r9
 1be:	af 92       	push	r10
 1c0:	bf 92       	push	r11
 1c2:	cf 92       	push	r12
 1c4:	df 92       	push	r13
 1c6:	ef 92       	push	r14
 1c8:	ff 92       	push	r15
 1ca:	0f 93       	push	r16
 1cc:	1f 93       	push	r17
 1ce:	2f 93       	push	r18
 1d0:	3f 93       	push	r19
 1d2:	4f 93       	push	r20
 1d4:	5f 93       	push	r21
 1d6:	6f 93       	push	r22
 1d8:	7f 93       	push	r23
 1da:	8f 93       	push	r24
 1dc:	9f 93       	push	r25
 1de:	af 93       	push	r26
 1e0:	bf 93       	push	r27
 1e2:	ef 93       	push	r30
 1e4:	ff 93       	push	r31
{
	int pot = ADC_read(0);
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	0e 94 40 00 	call	0x80	; 0x80 <_Z8ADC_readh>
	int on_time = map(pot, 0, 1023, 0, 1000);
 1ec:	40 e0       	ldi	r20, 0x00	; 0
 1ee:	50 e0       	ldi	r21, 0x00	; 0
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	00 e0       	ldi	r16, 0x00	; 0
 1f6:	10 ec       	ldi	r17, 0xC0	; 192
 1f8:	2f e7       	ldi	r18, 0x7F	; 127
 1fa:	34 e4       	ldi	r19, 0x44	; 68
 1fc:	6a 01       	movw	r12, r20
 1fe:	7b 01       	movw	r14, r22
 200:	0f 2e       	mov	r0, r31
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	8f 2e       	mov	r8, r31
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	9f 2e       	mov	r9, r31
 20a:	fa e7       	ldi	r31, 0x7A	; 122
 20c:	af 2e       	mov	r10, r31
 20e:	f4 e4       	ldi	r31, 0x44	; 68
 210:	bf 2e       	mov	r11, r31
 212:	f0 2d       	mov	r31, r0
 214:	0e 94 57 00 	call	0xae	; 0xae <_Z3mapiffff>
	PORTB |= (1 << PB0);
 218:	e5 e2       	ldi	r30, 0x25	; 37
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	20 81       	ld	r18, Z
 21e:	21 60       	ori	r18, 0x01	; 1
 220:	20 83       	st	Z, r18
	_delay_ms(on_time);
 222:	aa 27       	eor	r26, r26
 224:	97 fd       	sbrc	r25, 7
 226:	a0 95       	com	r26
 228:	ba 2f       	mov	r27, r26
 22a:	bc 01       	movw	r22, r24
 22c:	cd 01       	movw	r24, r26
 22e:	0e 94 77 02 	call	0x4ee	; 0x4ee <__floatsisf>
 232:	5b 01       	movw	r10, r22
 234:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 236:	20 e0       	ldi	r18, 0x00	; 0
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	4a e7       	ldi	r20, 0x7A	; 122
 23c:	53 e4       	ldi	r21, 0x43	; 67
 23e:	0e 94 2b 03 	call	0x656	; 0x656 <__mulsf3>
 242:	7b 01       	movw	r14, r22
 244:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	40 e8       	ldi	r20, 0x80	; 128
 24c:	5f e3       	ldi	r21, 0x3F	; 63
 24e:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__cmpsf2>
 252:	88 23       	and	r24, r24
 254:	1c f4       	brge	.+6      	; 0x25c <__vector_1+0xac>
 256:	61 e0       	ldi	r22, 0x01	; 1
 258:	70 e0       	ldi	r23, 0x00	; 0
 25a:	23 c0       	rjmp	.+70     	; 0x2a2 <__vector_1+0xf2>
		__ticks = 1;
	else if (__tmp > 65535)
 25c:	c8 01       	movw	r24, r16
 25e:	b7 01       	movw	r22, r14
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	3f ef       	ldi	r19, 0xFF	; 255
 264:	4f e7       	ldi	r20, 0x7F	; 127
 266:	57 e4       	ldi	r21, 0x47	; 71
 268:	0e 94 27 03 	call	0x64e	; 0x64e <__gesf2>
 26c:	18 16       	cp	r1, r24
 26e:	ac f4       	brge	.+42     	; 0x29a <__vector_1+0xea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 270:	c6 01       	movw	r24, r12
 272:	b5 01       	movw	r22, r10
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 e2       	ldi	r20, 0x20	; 32
 27a:	51 e4       	ldi	r21, 0x41	; 65
 27c:	0e 94 2b 03 	call	0x656	; 0x656 <__mulsf3>
 280:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 284:	cb 01       	movw	r24, r22
		while(__ticks)
 286:	67 2b       	or	r22, r23
 288:	79 f0       	breq	.+30     	; 0x2a8 <__vector_1+0xf8>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 28a:	29 e1       	ldi	r18, 0x19	; 25
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	f9 01       	movw	r30, r18
 290:	31 97       	sbiw	r30, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <__vector_1+0xe0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 294:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 296:	d9 f7       	brne	.-10     	; 0x28e <__vector_1+0xde>
 298:	07 c0       	rjmp	.+14     	; 0x2a8 <__vector_1+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 29a:	c8 01       	movw	r24, r16
 29c:	b7 01       	movw	r22, r14
 29e:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 2a2:	cb 01       	movw	r24, r22
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <__vector_1+0xf4>
	PORTB &= ~(1 << PB0);
 2a8:	e5 e2       	ldi	r30, 0x25	; 37
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	80 81       	ld	r24, Z
 2ae:	8e 7f       	andi	r24, 0xFE	; 254
 2b0:	80 83       	st	Z, r24
 2b2:	88 ea       	ldi	r24, 0xA8	; 168
 2b4:	91 e6       	ldi	r25, 0x61	; 97
 2b6:	01 97       	sbiw	r24, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <__vector_1+0x106>
	_delay_ms(100);

}
 2ba:	ff 91       	pop	r31
 2bc:	ef 91       	pop	r30
 2be:	bf 91       	pop	r27
 2c0:	af 91       	pop	r26
 2c2:	9f 91       	pop	r25
 2c4:	8f 91       	pop	r24
 2c6:	7f 91       	pop	r23
 2c8:	6f 91       	pop	r22
 2ca:	5f 91       	pop	r21
 2cc:	4f 91       	pop	r20
 2ce:	3f 91       	pop	r19
 2d0:	2f 91       	pop	r18
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	ff 90       	pop	r15
 2d8:	ef 90       	pop	r14
 2da:	df 90       	pop	r13
 2dc:	cf 90       	pop	r12
 2de:	bf 90       	pop	r11
 2e0:	af 90       	pop	r10
 2e2:	9f 90       	pop	r9
 2e4:	8f 90       	pop	r8
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__subsf3>:
 2f0:	50 58       	subi	r21, 0x80	; 128

000002f2 <__addsf3>:
 2f2:	bb 27       	eor	r27, r27
 2f4:	aa 27       	eor	r26, r26
 2f6:	0e d0       	rcall	.+28     	; 0x314 <__addsf3x>
 2f8:	70 c1       	rjmp	.+736    	; 0x5da <__fp_round>
 2fa:	61 d1       	rcall	.+706    	; 0x5be <__fp_pscA>
 2fc:	30 f0       	brcs	.+12     	; 0x30a <__addsf3+0x18>
 2fe:	66 d1       	rcall	.+716    	; 0x5cc <__fp_pscB>
 300:	20 f0       	brcs	.+8      	; 0x30a <__addsf3+0x18>
 302:	31 f4       	brne	.+12     	; 0x310 <__addsf3+0x1e>
 304:	9f 3f       	cpi	r25, 0xFF	; 255
 306:	11 f4       	brne	.+4      	; 0x30c <__addsf3+0x1a>
 308:	1e f4       	brtc	.+6      	; 0x310 <__addsf3+0x1e>
 30a:	56 c1       	rjmp	.+684    	; 0x5b8 <__fp_nan>
 30c:	0e f4       	brtc	.+2      	; 0x310 <__addsf3+0x1e>
 30e:	e0 95       	com	r30
 310:	e7 fb       	bst	r30, 7
 312:	4c c1       	rjmp	.+664    	; 0x5ac <__fp_inf>

00000314 <__addsf3x>:
 314:	e9 2f       	mov	r30, r25
 316:	72 d1       	rcall	.+740    	; 0x5fc <__fp_split3>
 318:	80 f3       	brcs	.-32     	; 0x2fa <__addsf3+0x8>
 31a:	ba 17       	cp	r27, r26
 31c:	62 07       	cpc	r22, r18
 31e:	73 07       	cpc	r23, r19
 320:	84 07       	cpc	r24, r20
 322:	95 07       	cpc	r25, r21
 324:	18 f0       	brcs	.+6      	; 0x32c <__addsf3x+0x18>
 326:	71 f4       	brne	.+28     	; 0x344 <__addsf3x+0x30>
 328:	9e f5       	brtc	.+102    	; 0x390 <__addsf3x+0x7c>
 32a:	8a c1       	rjmp	.+788    	; 0x640 <__fp_zero>
 32c:	0e f4       	brtc	.+2      	; 0x330 <__addsf3x+0x1c>
 32e:	e0 95       	com	r30
 330:	0b 2e       	mov	r0, r27
 332:	ba 2f       	mov	r27, r26
 334:	a0 2d       	mov	r26, r0
 336:	0b 01       	movw	r0, r22
 338:	b9 01       	movw	r22, r18
 33a:	90 01       	movw	r18, r0
 33c:	0c 01       	movw	r0, r24
 33e:	ca 01       	movw	r24, r20
 340:	a0 01       	movw	r20, r0
 342:	11 24       	eor	r1, r1
 344:	ff 27       	eor	r31, r31
 346:	59 1b       	sub	r21, r25
 348:	99 f0       	breq	.+38     	; 0x370 <__addsf3x+0x5c>
 34a:	59 3f       	cpi	r21, 0xF9	; 249
 34c:	50 f4       	brcc	.+20     	; 0x362 <__addsf3x+0x4e>
 34e:	50 3e       	cpi	r21, 0xE0	; 224
 350:	68 f1       	brcs	.+90     	; 0x3ac <__addsf3x+0x98>
 352:	1a 16       	cp	r1, r26
 354:	f0 40       	sbci	r31, 0x00	; 0
 356:	a2 2f       	mov	r26, r18
 358:	23 2f       	mov	r18, r19
 35a:	34 2f       	mov	r19, r20
 35c:	44 27       	eor	r20, r20
 35e:	58 5f       	subi	r21, 0xF8	; 248
 360:	f3 cf       	rjmp	.-26     	; 0x348 <__addsf3x+0x34>
 362:	46 95       	lsr	r20
 364:	37 95       	ror	r19
 366:	27 95       	ror	r18
 368:	a7 95       	ror	r26
 36a:	f0 40       	sbci	r31, 0x00	; 0
 36c:	53 95       	inc	r21
 36e:	c9 f7       	brne	.-14     	; 0x362 <__addsf3x+0x4e>
 370:	7e f4       	brtc	.+30     	; 0x390 <__addsf3x+0x7c>
 372:	1f 16       	cp	r1, r31
 374:	ba 0b       	sbc	r27, r26
 376:	62 0b       	sbc	r22, r18
 378:	73 0b       	sbc	r23, r19
 37a:	84 0b       	sbc	r24, r20
 37c:	ba f0       	brmi	.+46     	; 0x3ac <__addsf3x+0x98>
 37e:	91 50       	subi	r25, 0x01	; 1
 380:	a1 f0       	breq	.+40     	; 0x3aa <__addsf3x+0x96>
 382:	ff 0f       	add	r31, r31
 384:	bb 1f       	adc	r27, r27
 386:	66 1f       	adc	r22, r22
 388:	77 1f       	adc	r23, r23
 38a:	88 1f       	adc	r24, r24
 38c:	c2 f7       	brpl	.-16     	; 0x37e <__addsf3x+0x6a>
 38e:	0e c0       	rjmp	.+28     	; 0x3ac <__addsf3x+0x98>
 390:	ba 0f       	add	r27, r26
 392:	62 1f       	adc	r22, r18
 394:	73 1f       	adc	r23, r19
 396:	84 1f       	adc	r24, r20
 398:	48 f4       	brcc	.+18     	; 0x3ac <__addsf3x+0x98>
 39a:	87 95       	ror	r24
 39c:	77 95       	ror	r23
 39e:	67 95       	ror	r22
 3a0:	b7 95       	ror	r27
 3a2:	f7 95       	ror	r31
 3a4:	9e 3f       	cpi	r25, 0xFE	; 254
 3a6:	08 f0       	brcs	.+2      	; 0x3aa <__addsf3x+0x96>
 3a8:	b3 cf       	rjmp	.-154    	; 0x310 <__addsf3+0x1e>
 3aa:	93 95       	inc	r25
 3ac:	88 0f       	add	r24, r24
 3ae:	08 f0       	brcs	.+2      	; 0x3b2 <__addsf3x+0x9e>
 3b0:	99 27       	eor	r25, r25
 3b2:	ee 0f       	add	r30, r30
 3b4:	97 95       	ror	r25
 3b6:	87 95       	ror	r24
 3b8:	08 95       	ret

000003ba <__cmpsf2>:
 3ba:	d4 d0       	rcall	.+424    	; 0x564 <__fp_cmp>
 3bc:	08 f4       	brcc	.+2      	; 0x3c0 <__cmpsf2+0x6>
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	08 95       	ret

000003c2 <__divsf3>:
 3c2:	0c d0       	rcall	.+24     	; 0x3dc <__divsf3x>
 3c4:	0a c1       	rjmp	.+532    	; 0x5da <__fp_round>
 3c6:	02 d1       	rcall	.+516    	; 0x5cc <__fp_pscB>
 3c8:	40 f0       	brcs	.+16     	; 0x3da <__divsf3+0x18>
 3ca:	f9 d0       	rcall	.+498    	; 0x5be <__fp_pscA>
 3cc:	30 f0       	brcs	.+12     	; 0x3da <__divsf3+0x18>
 3ce:	21 f4       	brne	.+8      	; 0x3d8 <__divsf3+0x16>
 3d0:	5f 3f       	cpi	r21, 0xFF	; 255
 3d2:	19 f0       	breq	.+6      	; 0x3da <__divsf3+0x18>
 3d4:	eb c0       	rjmp	.+470    	; 0x5ac <__fp_inf>
 3d6:	51 11       	cpse	r21, r1
 3d8:	34 c1       	rjmp	.+616    	; 0x642 <__fp_szero>
 3da:	ee c0       	rjmp	.+476    	; 0x5b8 <__fp_nan>

000003dc <__divsf3x>:
 3dc:	0f d1       	rcall	.+542    	; 0x5fc <__fp_split3>
 3de:	98 f3       	brcs	.-26     	; 0x3c6 <__divsf3+0x4>

000003e0 <__divsf3_pse>:
 3e0:	99 23       	and	r25, r25
 3e2:	c9 f3       	breq	.-14     	; 0x3d6 <__divsf3+0x14>
 3e4:	55 23       	and	r21, r21
 3e6:	b1 f3       	breq	.-20     	; 0x3d4 <__divsf3+0x12>
 3e8:	95 1b       	sub	r25, r21
 3ea:	55 0b       	sbc	r21, r21
 3ec:	bb 27       	eor	r27, r27
 3ee:	aa 27       	eor	r26, r26
 3f0:	62 17       	cp	r22, r18
 3f2:	73 07       	cpc	r23, r19
 3f4:	84 07       	cpc	r24, r20
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__divsf3_pse+0x26>
 3f8:	9f 5f       	subi	r25, 0xFF	; 255
 3fa:	5f 4f       	sbci	r21, 0xFF	; 255
 3fc:	22 0f       	add	r18, r18
 3fe:	33 1f       	adc	r19, r19
 400:	44 1f       	adc	r20, r20
 402:	aa 1f       	adc	r26, r26
 404:	a9 f3       	breq	.-22     	; 0x3f0 <__divsf3_pse+0x10>
 406:	33 d0       	rcall	.+102    	; 0x46e <__divsf3_pse+0x8e>
 408:	0e 2e       	mov	r0, r30
 40a:	3a f0       	brmi	.+14     	; 0x41a <__divsf3_pse+0x3a>
 40c:	e0 e8       	ldi	r30, 0x80	; 128
 40e:	30 d0       	rcall	.+96     	; 0x470 <__divsf3_pse+0x90>
 410:	91 50       	subi	r25, 0x01	; 1
 412:	50 40       	sbci	r21, 0x00	; 0
 414:	e6 95       	lsr	r30
 416:	00 1c       	adc	r0, r0
 418:	ca f7       	brpl	.-14     	; 0x40c <__divsf3_pse+0x2c>
 41a:	29 d0       	rcall	.+82     	; 0x46e <__divsf3_pse+0x8e>
 41c:	fe 2f       	mov	r31, r30
 41e:	27 d0       	rcall	.+78     	; 0x46e <__divsf3_pse+0x8e>
 420:	66 0f       	add	r22, r22
 422:	77 1f       	adc	r23, r23
 424:	88 1f       	adc	r24, r24
 426:	bb 1f       	adc	r27, r27
 428:	26 17       	cp	r18, r22
 42a:	37 07       	cpc	r19, r23
 42c:	48 07       	cpc	r20, r24
 42e:	ab 07       	cpc	r26, r27
 430:	b0 e8       	ldi	r27, 0x80	; 128
 432:	09 f0       	breq	.+2      	; 0x436 <__divsf3_pse+0x56>
 434:	bb 0b       	sbc	r27, r27
 436:	80 2d       	mov	r24, r0
 438:	bf 01       	movw	r22, r30
 43a:	ff 27       	eor	r31, r31
 43c:	93 58       	subi	r25, 0x83	; 131
 43e:	5f 4f       	sbci	r21, 0xFF	; 255
 440:	2a f0       	brmi	.+10     	; 0x44c <__divsf3_pse+0x6c>
 442:	9e 3f       	cpi	r25, 0xFE	; 254
 444:	51 05       	cpc	r21, r1
 446:	68 f0       	brcs	.+26     	; 0x462 <__divsf3_pse+0x82>
 448:	b1 c0       	rjmp	.+354    	; 0x5ac <__fp_inf>
 44a:	fb c0       	rjmp	.+502    	; 0x642 <__fp_szero>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	ec f3       	brlt	.-6      	; 0x44a <__divsf3_pse+0x6a>
 450:	98 3e       	cpi	r25, 0xE8	; 232
 452:	dc f3       	brlt	.-10     	; 0x44a <__divsf3_pse+0x6a>
 454:	86 95       	lsr	r24
 456:	77 95       	ror	r23
 458:	67 95       	ror	r22
 45a:	b7 95       	ror	r27
 45c:	f7 95       	ror	r31
 45e:	9f 5f       	subi	r25, 0xFF	; 255
 460:	c9 f7       	brne	.-14     	; 0x454 <__divsf3_pse+0x74>
 462:	88 0f       	add	r24, r24
 464:	91 1d       	adc	r25, r1
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret
 46e:	e1 e0       	ldi	r30, 0x01	; 1
 470:	66 0f       	add	r22, r22
 472:	77 1f       	adc	r23, r23
 474:	88 1f       	adc	r24, r24
 476:	bb 1f       	adc	r27, r27
 478:	62 17       	cp	r22, r18
 47a:	73 07       	cpc	r23, r19
 47c:	84 07       	cpc	r24, r20
 47e:	ba 07       	cpc	r27, r26
 480:	20 f0       	brcs	.+8      	; 0x48a <__divsf3_pse+0xaa>
 482:	62 1b       	sub	r22, r18
 484:	73 0b       	sbc	r23, r19
 486:	84 0b       	sbc	r24, r20
 488:	ba 0b       	sbc	r27, r26
 48a:	ee 1f       	adc	r30, r30
 48c:	88 f7       	brcc	.-30     	; 0x470 <__divsf3_pse+0x90>
 48e:	e0 95       	com	r30
 490:	08 95       	ret

00000492 <__fixunssfsi>:
 492:	bc d0       	rcall	.+376    	; 0x60c <__fp_splitA>
 494:	88 f0       	brcs	.+34     	; 0x4b8 <__fixunssfsi+0x26>
 496:	9f 57       	subi	r25, 0x7F	; 127
 498:	90 f0       	brcs	.+36     	; 0x4be <__fixunssfsi+0x2c>
 49a:	b9 2f       	mov	r27, r25
 49c:	99 27       	eor	r25, r25
 49e:	b7 51       	subi	r27, 0x17	; 23
 4a0:	a0 f0       	brcs	.+40     	; 0x4ca <__fixunssfsi+0x38>
 4a2:	d1 f0       	breq	.+52     	; 0x4d8 <__fixunssfsi+0x46>
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	1a f0       	brmi	.+6      	; 0x4b4 <__fixunssfsi+0x22>
 4ae:	ba 95       	dec	r27
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <__fixunssfsi+0x12>
 4b2:	12 c0       	rjmp	.+36     	; 0x4d8 <__fixunssfsi+0x46>
 4b4:	b1 30       	cpi	r27, 0x01	; 1
 4b6:	81 f0       	breq	.+32     	; 0x4d8 <__fixunssfsi+0x46>
 4b8:	c3 d0       	rcall	.+390    	; 0x640 <__fp_zero>
 4ba:	b1 e0       	ldi	r27, 0x01	; 1
 4bc:	08 95       	ret
 4be:	c0 c0       	rjmp	.+384    	; 0x640 <__fp_zero>
 4c0:	67 2f       	mov	r22, r23
 4c2:	78 2f       	mov	r23, r24
 4c4:	88 27       	eor	r24, r24
 4c6:	b8 5f       	subi	r27, 0xF8	; 248
 4c8:	39 f0       	breq	.+14     	; 0x4d8 <__fixunssfsi+0x46>
 4ca:	b9 3f       	cpi	r27, 0xF9	; 249
 4cc:	cc f3       	brlt	.-14     	; 0x4c0 <__fixunssfsi+0x2e>
 4ce:	86 95       	lsr	r24
 4d0:	77 95       	ror	r23
 4d2:	67 95       	ror	r22
 4d4:	b3 95       	inc	r27
 4d6:	d9 f7       	brne	.-10     	; 0x4ce <__fixunssfsi+0x3c>
 4d8:	3e f4       	brtc	.+14     	; 0x4e8 <__fixunssfsi+0x56>
 4da:	90 95       	com	r25
 4dc:	80 95       	com	r24
 4de:	70 95       	com	r23
 4e0:	61 95       	neg	r22
 4e2:	7f 4f       	sbci	r23, 0xFF	; 255
 4e4:	8f 4f       	sbci	r24, 0xFF	; 255
 4e6:	9f 4f       	sbci	r25, 0xFF	; 255
 4e8:	08 95       	ret

000004ea <__floatunsisf>:
 4ea:	e8 94       	clt
 4ec:	09 c0       	rjmp	.+18     	; 0x500 <__floatsisf+0x12>

000004ee <__floatsisf>:
 4ee:	97 fb       	bst	r25, 7
 4f0:	3e f4       	brtc	.+14     	; 0x500 <__floatsisf+0x12>
 4f2:	90 95       	com	r25
 4f4:	80 95       	com	r24
 4f6:	70 95       	com	r23
 4f8:	61 95       	neg	r22
 4fa:	7f 4f       	sbci	r23, 0xFF	; 255
 4fc:	8f 4f       	sbci	r24, 0xFF	; 255
 4fe:	9f 4f       	sbci	r25, 0xFF	; 255
 500:	99 23       	and	r25, r25
 502:	a9 f0       	breq	.+42     	; 0x52e <__floatsisf+0x40>
 504:	f9 2f       	mov	r31, r25
 506:	96 e9       	ldi	r25, 0x96	; 150
 508:	bb 27       	eor	r27, r27
 50a:	93 95       	inc	r25
 50c:	f6 95       	lsr	r31
 50e:	87 95       	ror	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f1 11       	cpse	r31, r1
 518:	f8 cf       	rjmp	.-16     	; 0x50a <__floatsisf+0x1c>
 51a:	fa f4       	brpl	.+62     	; 0x55a <__floatsisf+0x6c>
 51c:	bb 0f       	add	r27, r27
 51e:	11 f4       	brne	.+4      	; 0x524 <__floatsisf+0x36>
 520:	60 ff       	sbrs	r22, 0
 522:	1b c0       	rjmp	.+54     	; 0x55a <__floatsisf+0x6c>
 524:	6f 5f       	subi	r22, 0xFF	; 255
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	16 c0       	rjmp	.+44     	; 0x55a <__floatsisf+0x6c>
 52e:	88 23       	and	r24, r24
 530:	11 f0       	breq	.+4      	; 0x536 <__floatsisf+0x48>
 532:	96 e9       	ldi	r25, 0x96	; 150
 534:	11 c0       	rjmp	.+34     	; 0x558 <__floatsisf+0x6a>
 536:	77 23       	and	r23, r23
 538:	21 f0       	breq	.+8      	; 0x542 <__floatsisf+0x54>
 53a:	9e e8       	ldi	r25, 0x8E	; 142
 53c:	87 2f       	mov	r24, r23
 53e:	76 2f       	mov	r23, r22
 540:	05 c0       	rjmp	.+10     	; 0x54c <__floatsisf+0x5e>
 542:	66 23       	and	r22, r22
 544:	71 f0       	breq	.+28     	; 0x562 <__floatsisf+0x74>
 546:	96 e8       	ldi	r25, 0x86	; 134
 548:	86 2f       	mov	r24, r22
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	60 e0       	ldi	r22, 0x00	; 0
 54e:	2a f0       	brmi	.+10     	; 0x55a <__floatsisf+0x6c>
 550:	9a 95       	dec	r25
 552:	66 0f       	add	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	da f7       	brpl	.-10     	; 0x550 <__floatsisf+0x62>
 55a:	88 0f       	add	r24, r24
 55c:	96 95       	lsr	r25
 55e:	87 95       	ror	r24
 560:	97 f9       	bld	r25, 7
 562:	08 95       	ret

00000564 <__fp_cmp>:
 564:	99 0f       	add	r25, r25
 566:	00 08       	sbc	r0, r0
 568:	55 0f       	add	r21, r21
 56a:	aa 0b       	sbc	r26, r26
 56c:	e0 e8       	ldi	r30, 0x80	; 128
 56e:	fe ef       	ldi	r31, 0xFE	; 254
 570:	16 16       	cp	r1, r22
 572:	17 06       	cpc	r1, r23
 574:	e8 07       	cpc	r30, r24
 576:	f9 07       	cpc	r31, r25
 578:	c0 f0       	brcs	.+48     	; 0x5aa <__fp_cmp+0x46>
 57a:	12 16       	cp	r1, r18
 57c:	13 06       	cpc	r1, r19
 57e:	e4 07       	cpc	r30, r20
 580:	f5 07       	cpc	r31, r21
 582:	98 f0       	brcs	.+38     	; 0x5aa <__fp_cmp+0x46>
 584:	62 1b       	sub	r22, r18
 586:	73 0b       	sbc	r23, r19
 588:	84 0b       	sbc	r24, r20
 58a:	95 0b       	sbc	r25, r21
 58c:	39 f4       	brne	.+14     	; 0x59c <__fp_cmp+0x38>
 58e:	0a 26       	eor	r0, r26
 590:	61 f0       	breq	.+24     	; 0x5aa <__fp_cmp+0x46>
 592:	23 2b       	or	r18, r19
 594:	24 2b       	or	r18, r20
 596:	25 2b       	or	r18, r21
 598:	21 f4       	brne	.+8      	; 0x5a2 <__fp_cmp+0x3e>
 59a:	08 95       	ret
 59c:	0a 26       	eor	r0, r26
 59e:	09 f4       	brne	.+2      	; 0x5a2 <__fp_cmp+0x3e>
 5a0:	a1 40       	sbci	r26, 0x01	; 1
 5a2:	a6 95       	lsr	r26
 5a4:	8f ef       	ldi	r24, 0xFF	; 255
 5a6:	81 1d       	adc	r24, r1
 5a8:	81 1d       	adc	r24, r1
 5aa:	08 95       	ret

000005ac <__fp_inf>:
 5ac:	97 f9       	bld	r25, 7
 5ae:	9f 67       	ori	r25, 0x7F	; 127
 5b0:	80 e8       	ldi	r24, 0x80	; 128
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	60 e0       	ldi	r22, 0x00	; 0
 5b6:	08 95       	ret

000005b8 <__fp_nan>:
 5b8:	9f ef       	ldi	r25, 0xFF	; 255
 5ba:	80 ec       	ldi	r24, 0xC0	; 192
 5bc:	08 95       	ret

000005be <__fp_pscA>:
 5be:	00 24       	eor	r0, r0
 5c0:	0a 94       	dec	r0
 5c2:	16 16       	cp	r1, r22
 5c4:	17 06       	cpc	r1, r23
 5c6:	18 06       	cpc	r1, r24
 5c8:	09 06       	cpc	r0, r25
 5ca:	08 95       	ret

000005cc <__fp_pscB>:
 5cc:	00 24       	eor	r0, r0
 5ce:	0a 94       	dec	r0
 5d0:	12 16       	cp	r1, r18
 5d2:	13 06       	cpc	r1, r19
 5d4:	14 06       	cpc	r1, r20
 5d6:	05 06       	cpc	r0, r21
 5d8:	08 95       	ret

000005da <__fp_round>:
 5da:	09 2e       	mov	r0, r25
 5dc:	03 94       	inc	r0
 5de:	00 0c       	add	r0, r0
 5e0:	11 f4       	brne	.+4      	; 0x5e6 <__fp_round+0xc>
 5e2:	88 23       	and	r24, r24
 5e4:	52 f0       	brmi	.+20     	; 0x5fa <__fp_round+0x20>
 5e6:	bb 0f       	add	r27, r27
 5e8:	40 f4       	brcc	.+16     	; 0x5fa <__fp_round+0x20>
 5ea:	bf 2b       	or	r27, r31
 5ec:	11 f4       	brne	.+4      	; 0x5f2 <__fp_round+0x18>
 5ee:	60 ff       	sbrs	r22, 0
 5f0:	04 c0       	rjmp	.+8      	; 0x5fa <__fp_round+0x20>
 5f2:	6f 5f       	subi	r22, 0xFF	; 255
 5f4:	7f 4f       	sbci	r23, 0xFF	; 255
 5f6:	8f 4f       	sbci	r24, 0xFF	; 255
 5f8:	9f 4f       	sbci	r25, 0xFF	; 255
 5fa:	08 95       	ret

000005fc <__fp_split3>:
 5fc:	57 fd       	sbrc	r21, 7
 5fe:	90 58       	subi	r25, 0x80	; 128
 600:	44 0f       	add	r20, r20
 602:	55 1f       	adc	r21, r21
 604:	59 f0       	breq	.+22     	; 0x61c <__fp_splitA+0x10>
 606:	5f 3f       	cpi	r21, 0xFF	; 255
 608:	71 f0       	breq	.+28     	; 0x626 <__fp_splitA+0x1a>
 60a:	47 95       	ror	r20

0000060c <__fp_splitA>:
 60c:	88 0f       	add	r24, r24
 60e:	97 fb       	bst	r25, 7
 610:	99 1f       	adc	r25, r25
 612:	61 f0       	breq	.+24     	; 0x62c <__fp_splitA+0x20>
 614:	9f 3f       	cpi	r25, 0xFF	; 255
 616:	79 f0       	breq	.+30     	; 0x636 <__fp_splitA+0x2a>
 618:	87 95       	ror	r24
 61a:	08 95       	ret
 61c:	12 16       	cp	r1, r18
 61e:	13 06       	cpc	r1, r19
 620:	14 06       	cpc	r1, r20
 622:	55 1f       	adc	r21, r21
 624:	f2 cf       	rjmp	.-28     	; 0x60a <__fp_split3+0xe>
 626:	46 95       	lsr	r20
 628:	f1 df       	rcall	.-30     	; 0x60c <__fp_splitA>
 62a:	08 c0       	rjmp	.+16     	; 0x63c <__fp_splitA+0x30>
 62c:	16 16       	cp	r1, r22
 62e:	17 06       	cpc	r1, r23
 630:	18 06       	cpc	r1, r24
 632:	99 1f       	adc	r25, r25
 634:	f1 cf       	rjmp	.-30     	; 0x618 <__fp_splitA+0xc>
 636:	86 95       	lsr	r24
 638:	71 05       	cpc	r23, r1
 63a:	61 05       	cpc	r22, r1
 63c:	08 94       	sec
 63e:	08 95       	ret

00000640 <__fp_zero>:
 640:	e8 94       	clt

00000642 <__fp_szero>:
 642:	bb 27       	eor	r27, r27
 644:	66 27       	eor	r22, r22
 646:	77 27       	eor	r23, r23
 648:	cb 01       	movw	r24, r22
 64a:	97 f9       	bld	r25, 7
 64c:	08 95       	ret

0000064e <__gesf2>:
 64e:	8a df       	rcall	.-236    	; 0x564 <__fp_cmp>
 650:	08 f4       	brcc	.+2      	; 0x654 <__gesf2+0x6>
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	08 95       	ret

00000656 <__mulsf3>:
 656:	0b d0       	rcall	.+22     	; 0x66e <__mulsf3x>
 658:	c0 cf       	rjmp	.-128    	; 0x5da <__fp_round>
 65a:	b1 df       	rcall	.-158    	; 0x5be <__fp_pscA>
 65c:	28 f0       	brcs	.+10     	; 0x668 <__mulsf3+0x12>
 65e:	b6 df       	rcall	.-148    	; 0x5cc <__fp_pscB>
 660:	18 f0       	brcs	.+6      	; 0x668 <__mulsf3+0x12>
 662:	95 23       	and	r25, r21
 664:	09 f0       	breq	.+2      	; 0x668 <__mulsf3+0x12>
 666:	a2 cf       	rjmp	.-188    	; 0x5ac <__fp_inf>
 668:	a7 cf       	rjmp	.-178    	; 0x5b8 <__fp_nan>
 66a:	11 24       	eor	r1, r1
 66c:	ea cf       	rjmp	.-44     	; 0x642 <__fp_szero>

0000066e <__mulsf3x>:
 66e:	c6 df       	rcall	.-116    	; 0x5fc <__fp_split3>
 670:	a0 f3       	brcs	.-24     	; 0x65a <__mulsf3+0x4>

00000672 <__mulsf3_pse>:
 672:	95 9f       	mul	r25, r21
 674:	d1 f3       	breq	.-12     	; 0x66a <__mulsf3+0x14>
 676:	95 0f       	add	r25, r21
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	55 1f       	adc	r21, r21
 67c:	62 9f       	mul	r22, r18
 67e:	f0 01       	movw	r30, r0
 680:	72 9f       	mul	r23, r18
 682:	bb 27       	eor	r27, r27
 684:	f0 0d       	add	r31, r0
 686:	b1 1d       	adc	r27, r1
 688:	63 9f       	mul	r22, r19
 68a:	aa 27       	eor	r26, r26
 68c:	f0 0d       	add	r31, r0
 68e:	b1 1d       	adc	r27, r1
 690:	aa 1f       	adc	r26, r26
 692:	64 9f       	mul	r22, r20
 694:	66 27       	eor	r22, r22
 696:	b0 0d       	add	r27, r0
 698:	a1 1d       	adc	r26, r1
 69a:	66 1f       	adc	r22, r22
 69c:	82 9f       	mul	r24, r18
 69e:	22 27       	eor	r18, r18
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	62 1f       	adc	r22, r18
 6a6:	73 9f       	mul	r23, r19
 6a8:	b0 0d       	add	r27, r0
 6aa:	a1 1d       	adc	r26, r1
 6ac:	62 1f       	adc	r22, r18
 6ae:	83 9f       	mul	r24, r19
 6b0:	a0 0d       	add	r26, r0
 6b2:	61 1d       	adc	r22, r1
 6b4:	22 1f       	adc	r18, r18
 6b6:	74 9f       	mul	r23, r20
 6b8:	33 27       	eor	r19, r19
 6ba:	a0 0d       	add	r26, r0
 6bc:	61 1d       	adc	r22, r1
 6be:	23 1f       	adc	r18, r19
 6c0:	84 9f       	mul	r24, r20
 6c2:	60 0d       	add	r22, r0
 6c4:	21 1d       	adc	r18, r1
 6c6:	82 2f       	mov	r24, r18
 6c8:	76 2f       	mov	r23, r22
 6ca:	6a 2f       	mov	r22, r26
 6cc:	11 24       	eor	r1, r1
 6ce:	9f 57       	subi	r25, 0x7F	; 127
 6d0:	50 40       	sbci	r21, 0x00	; 0
 6d2:	8a f0       	brmi	.+34     	; 0x6f6 <__mulsf3_pse+0x84>
 6d4:	e1 f0       	breq	.+56     	; 0x70e <__mulsf3_pse+0x9c>
 6d6:	88 23       	and	r24, r24
 6d8:	4a f0       	brmi	.+18     	; 0x6ec <__mulsf3_pse+0x7a>
 6da:	ee 0f       	add	r30, r30
 6dc:	ff 1f       	adc	r31, r31
 6de:	bb 1f       	adc	r27, r27
 6e0:	66 1f       	adc	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	91 50       	subi	r25, 0x01	; 1
 6e8:	50 40       	sbci	r21, 0x00	; 0
 6ea:	a9 f7       	brne	.-22     	; 0x6d6 <__mulsf3_pse+0x64>
 6ec:	9e 3f       	cpi	r25, 0xFE	; 254
 6ee:	51 05       	cpc	r21, r1
 6f0:	70 f0       	brcs	.+28     	; 0x70e <__mulsf3_pse+0x9c>
 6f2:	5c cf       	rjmp	.-328    	; 0x5ac <__fp_inf>
 6f4:	a6 cf       	rjmp	.-180    	; 0x642 <__fp_szero>
 6f6:	5f 3f       	cpi	r21, 0xFF	; 255
 6f8:	ec f3       	brlt	.-6      	; 0x6f4 <__mulsf3_pse+0x82>
 6fa:	98 3e       	cpi	r25, 0xE8	; 232
 6fc:	dc f3       	brlt	.-10     	; 0x6f4 <__mulsf3_pse+0x82>
 6fe:	86 95       	lsr	r24
 700:	77 95       	ror	r23
 702:	67 95       	ror	r22
 704:	b7 95       	ror	r27
 706:	f7 95       	ror	r31
 708:	e7 95       	ror	r30
 70a:	9f 5f       	subi	r25, 0xFF	; 255
 70c:	c1 f7       	brne	.-16     	; 0x6fe <__mulsf3_pse+0x8c>
 70e:	fe 2b       	or	r31, r30
 710:	88 0f       	add	r24, r24
 712:	91 1d       	adc	r25, r1
 714:	96 95       	lsr	r25
 716:	87 95       	ror	r24
 718:	97 f9       	bld	r25, 7
 71a:	08 95       	ret

0000071c <_exit>:
 71c:	f8 94       	cli

0000071e <__stop_program>:
 71e:	ff cf       	rjmp	.-2      	; 0x71e <__stop_program>
